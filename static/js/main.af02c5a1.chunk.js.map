{"version":3,"sources":["components/zoom.png","components/plexoo.png","components/box.jsx","components/board.jsx","components/congrats.gif","components/message.jsx","components/refresh.jsx","components/bg1.jpg","components/game.js","App.js","reportWebVitals.js","index.js"],"names":["Box","props","value","name","onClick","src","plexoo","style","width","height","border","backgroundColor","zoom","renderBox","display","gridTemplate","Board","Array","map","_","pos","fontSize","fontWeight","textAlign","color","marginLeft","Message","alignItems","includes","congrats","position","margin","Refresh","Game","useState","fill","board","setBoard","isPlayer","setIsPlayer","message","setMessage","left","top","right","flexDirection","backgroundImage","bg","backgroundRepeat","backgroundSize","objectFit","boardCopy","lines","i","length","a","b","c","isWon","indexOf","nextPlayer","App","useEffect","document","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.af02c5a1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/zoom.f777432a.png\";","export default __webpack_public_path__ + \"static/media/plexoo.e54c91f4.png\";","import React from 'react'\nimport zoom from './zoom.png'\nimport plexoo from './plexoo.png'\n\nconst style = {\n\tborder: \"3px solid black\",\n\tfontSize: \"40px\",\n}   \n\n\n/*\nBox.jsx is the discrete unit structure of the board ui.\nIt is made a button.\nWhen its pressed it will call the function passed from porps.\n*/\n\nconst renderBox = (props) => {\n\tif (props.value === 'O') {\n\t\treturn <img name={props.name} onClick={props.onClick} src={plexoo} style={{ width: 270, height: 160, border: '1px solid black', backgroundColor: 'white' }} />\n\t} else if (props.value === 'X') {\n\t\treturn <img name={props.name} onClick={props.onClick} src={zoom} style={{ width: 270, height: 160, border: '1px solid black', backgroundColor: 'white' }} />\n\t} else {\n\t\treturn <div name={props.name} onClick={props.onClick} style={{ width: 270, height: 160, border: '1px solid black', backgroundColor: 'white' }} />\n\t}\n}\n\nconst Box = (props) => renderBox(props)\n\nexport default Box\n","import React from 'react'\nimport Box from './box'\n\nconst style = {\n\tdisplay: \"grid\",\n\tgridTemplate: \"repeat(3, 1fr) / repeat(3, 1fr)\",\n};\n\n\nconst Board = (props) => (\n    <div style={style}>\n    {[ ...Array(9)].map((_, pos) => <Box key={pos} name={pos} onClick={()=>props.onClick(pos)} value={props.value[pos]}/>)}\n    </div>\n)\n\n\nexport default Board","export default __webpack_public_path__ + \"static/media/congrats.54eb7f1e.gif\";","import React from 'react'\nimport congrats from './congrats.gif'\n\nconst style = {\n\twidth: \"500px\",\n\tdisplay: \"grid\",\n    fontSize: \"40px\",\n\tfontWeight: \"800\",\n\ttextAlign:'center',\n\tcolor: 'white',\n\tmarginLeft: 50,\n};\n\n\nconst Message = (props) => (\n\t<div style={{ display: 'flex', alignItems : 'center' }}>\n\t\t<div style={{ display: 'flex', alignItems : 'center' }}>\n\t\t\t{props.value?.includes('WINNER') ? <img src={congrats} style={{ position: 'absolute', width: 100, height: 100 }} /> : <div />}\n\t\t\t<h1 name={\"msg\"} style={style}>{props.value}</h1>\n\t\t</div>\n\t</div>\n)\n\nexport default Message","import React from 'react'\n\nconst style = {\n\twidth: \"250px\",\n\tmargin: \"100px auto\",\n\tdisplay: \"grid\",\n    fontSize: \"40px\",\n\tfontWeight: \"800\",\n};\n\nconst Refresh = (props) => <button name={\"btn\"} style={style} onClick={props.onClick}>{props.value}</button>\n\nexport default Refresh","export default __webpack_public_path__ + \"static/media/bg1.3d97c9b6.jpg\";","import React, { useState } from 'react'\nimport Board from './board'\n\nimport Message from './message'\nimport Refresh from './refresh'\nimport bg from './bg1.jpg'\n\n\nconst isWon = (board) => {\n    // list of postion that is winning\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n    // checking each of the postition seeing if the combination is there\n    // if it does return the True\n    // else return false\n    for (let i=0; i< lines.length; i++) {\n        let [a, b, c] = lines[i];\n        //console.log(board[a] === board[b] && board[a] === board[c])\n        if (board[a]!==\"\" &&board[a] === board[b] && board[a] === board[c]) {\n            return true;\n        }\n    }\n    return false;\n}\n\n\nconst Game = () => {\n    // this is for board\n    // default value for all the elemnt is \"\"\n    const [board, setBoard] = useState(Array(9).fill(\"\")); \n    // first player is \"X\"\n    // if the game is over put \"\" as player\n    const [isPlayer, setIsPlayer] = useState(\"X\");\n    const [message, setMessage] = useState(\"Click to Start\");\n  \n\n\n    const refresh  = () => {\n        setBoard(Array(9).fill(\"\")); \n        setMessage(\"Click to start\");\n        setIsPlayer(\"X\");  \n    }\n \n\n    const handleInput = (pos) => {    \n        if (isPlayer === \"\" || board[pos] !== \"\") {\n            //is the game is over don't play\n            // if the box has been clocked already then return\n            return;\n        }\n       \n        const boardCopy = [...board];\n        boardCopy[pos] = isPlayer;\n        setBoard(boardCopy); // updating board for current player  \n        \n\n        if (isWon(boardCopy)){\n            // once game is over\n            setMessage(`WINNER: ${isPlayer !== 'X' ? '-ZOOM' : 'Plexoo'}`)\n            // since the game is over putting \"\" \n            setIsPlayer(\"\");\n            return;\n        }\n\n        if (boardCopy.indexOf(\"\")=== -1){\n            // if no more moves game is draw\n            setMessage(\"DRAW\")\n            setIsPlayer(\"\");\n        } else {\n            let nextPlayer = (isPlayer === \"X\") ? \"O\" : \"X\"\n            setIsPlayer(nextPlayer); // updating player\n            setMessage(`TURN: ${nextPlayer !== 'X' ? '-ZOOM' : 'Plexoo'}`)\n        }\n    }\n\n    return (\n        <div style={{ position: 'relative' }}>\n            <h1 style={{ position: 'absolute', left: 20, top: 0, color: 'white' }}>Created by, Aguilar77$#6106</h1>\n            <div style={{ position: 'absolute', right: 20, top: 0 }}>\n                <h1 style={{ color: 'white' }}>ZAYSAN RAPTORS</h1>\n                <h1 style={{ color: 'white' }}>TIC TAC TOE GAME</h1>\n            </div>\n            <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column', height: '100vh',  width:'100%', backgroundImage: `url(${bg})`, backgroundRepeat: 'no-repeat', backgroundSize: '100%',  objectFit: 'cover' }}>\n                <Message value={message} />\n                <Board onClick={handleInput} value={board} /> \n                <Refresh onClick={refresh} value={'Refresh'} />\n            </div>\n        </div>\n    )\n}\n\nexport default Game","import React, { useEffect }  from 'react'\nimport Game from './components/game' \n\nconst App = () => {\n    useEffect(() => {\n        document.title = \"tic-tac-toe\"\n    }, [])\n\n    return <Game/> \n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}